{
    "openapi": "3.0.0",
    "info": {
        "title": "GLOBALYS API",
        "description": "Documentation de l'API GLOBALYS",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": "Serveur principal"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Connexion par email ou téléphone + mot de passe",
                "operationId": "8dcb70df1020986038d098cc08d05dae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "type": "string",
                                        "example": "admin@globalys.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connexion réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "description": "Utilisateur connecté avec relation role chargée",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Connexion réussie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error / Identifiants invalides"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Déconnexion (invalidation du token courant)",
                "operationId": "69281b12abb272c76871f19cb17ca563",
                "responses": {
                    "200": {
                        "description": "Déconnexion réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Déconnexion réussie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Rafraîchir le token JWT (en utilisant le Bearer token actuel ou un token passé en body)",
                "description": "Tymon/jwt-auth n'utilise pas de refresh_token séparé. On rafraîchit le JWT en cours.",
                "operationId": "b2eae7a8032954d25b46c7ec6f489c68",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "refresh_token": {
                                        "description": "Optionnel si Bearer token est présent dans l’en-tête Authorization",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token rafraîchi",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                },
                                                "user": {
                                                    "description": "Utilisateur associé au nouveau token (avec role)",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token rafraîchi avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Token manquant"
                    },
                    "401": {
                        "description": "Token invalide ou expiré"
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Demander un lien de réinitialisation de mot de passe (mock/demo)",
                "operationId": "cff9b52a898f73f39d684747bd69c4e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Lien envoyé"
                    },
                    "404": {
                        "description": "Email non trouvé"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/availability-slots": {
            "get": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Lister les créneaux",
                "description": "Filtres: service_offering_id, provider_id, status, available=1, upcoming=1, from, to. Tri & pagination.",
                "operationId": "2f48d1736d3a2cf3acd6ec919c05e55f",
                "parameters": [
                    {
                        "name": "service_offering_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "provider_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "full",
                                "blocked",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "available",
                        "in": "query",
                        "description": "1 = uniquement réservable",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "upcoming",
                        "in": "query",
                        "description": "1 = seulement futurs",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "start_at",
                                "end_at",
                                "capacity",
                                "booked_count",
                                "price_override",
                                "created_at"
                            ]
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "example": "15 ou 'all'"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Créer un créneau",
                "operationId": "ec046bf83c177014425443734581931b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_offering_id",
                                    "start_at",
                                    "end_at",
                                    "capacity"
                                ],
                                "properties": {
                                    "service_offering_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "provider_id": {
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": true
                                    },
                                    "start_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-20T10:00:00Z"
                                    },
                                    "end_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-20T11:00:00Z"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "Africa/Douala",
                                        "nullable": true
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "booked_count": {
                                        "type": "integer",
                                        "example": 0,
                                        "nullable": true
                                    },
                                    "price_override": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15000,
                                        "nullable": true
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "XAF",
                                        "nullable": true
                                    },
                                    "is_recurring": {
                                        "type": "boolean",
                                        "example": false,
                                        "nullable": true
                                    },
                                    "recurrence_rule": {
                                        "type": "string",
                                        "example": "RRULE:FREQ=WEEKLY;BYDAY=MO,WE",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "full",
                                            "blocked",
                                            "cancelled"
                                        ],
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Créé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/availability-slots/{availabilitySlot}": {
            "get": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Afficher un créneau",
                "operationId": "f0a81142237157b45f12f3393d645c34",
                "parameters": [
                    {
                        "name": "availabilitySlot",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Mettre à jour un créneau (PUT)",
                "operationId": "fe1509a19b1e7e25d765116dd41e71f1",
                "parameters": [
                    {
                        "name": "availabilitySlot",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Supprimer un créneau",
                "operationId": "cc5c5561b7474a8ba3fa69df37f939ca",
                "parameters": [
                    {
                        "name": "availabilitySlot",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Mettre à jour un créneau",
                "operationId": "76c6ccbfd94dda40cf662708b071cc8b",
                "parameters": [
                    {
                        "name": "availabilitySlot",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/availability-slots/{availabilitySlot}/book": {
            "post": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Réserver de la capacité sur un créneau",
                "operationId": "90aabd4a775066cf56a7b7cc83b15421",
                "parameters": [
                    {
                        "name": "availabilitySlot",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "qty": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/availability-slots/{availabilitySlot}/unbook": {
            "post": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Retirer de la capacité réservée",
                "operationId": "bbd0ba0750b80a0808a611c7e683f522",
                "parameters": [
                    {
                        "name": "availabilitySlot",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "qty": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/availability-slots/{availabilitySlot}/status": {
            "post": {
                "tags": [
                    "AvailabilitySlots"
                ],
                "summary": "Changer le statut d'un créneau",
                "operationId": "728d74cc77a72fee35667a275614151d",
                "parameters": [
                    {
                        "name": "availabilitySlot",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "full",
                                            "blocked",
                                            "cancelled"
                                        ]
                                    },
                                    "notes": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Lister les réservations",
                "description": "Recherche, filtres, tri et pagination.",
                "operationId": "eb7c332e8ba161904a1c0071040f61a5",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "confirmed",
                                "in_progress",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "payment_status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "unpaid",
                                "paid",
                                "refunded",
                                "partial"
                            ]
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "provider_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_offering_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Date début (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Date fin (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Recherche (code, city, address)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount_min",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "amount_max",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "created_at|start_at|end_at|total_amount|status|payment_status|code",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "asc|desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OK"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 101,
                                                            "code": "BK-ABC123",
                                                            "status": "pending",
                                                            "payment_status": "unpaid",
                                                            "total_amount": 45000,
                                                            "currency": "XAF",
                                                            "start_at": "2025-08-20 09:00:00"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Créer une réservation",
                "operationId": "e33fa5a6507581f9b1e0d710a9a130d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "service_offering_id",
                                    "client_id",
                                    "quantity",
                                    "unit_price"
                                ],
                                "properties": {
                                    "service_offering_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "client_id": {
                                        "type": "integer",
                                        "example": 25
                                    },
                                    "provider_id": {
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": true
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2
                                    },
                                    "unit_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 15000
                                    },
                                    "tax_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 19.25
                                    },
                                    "discount_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 0
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "XAF"
                                    },
                                    "start_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-20 09:00:00"
                                    },
                                    "end_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-20 10:00:00"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Douala"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Bonapriso, Rue X"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Créé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Réservation créée"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 120,
                                                "code": "BK-7UQZ9K",
                                                "status": "pending",
                                                "payment_status": "unpaid"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Détail d'une réservation",
                "operationId": "5b1a917e6c62a1029dd759b1587c276b",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OK"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 101,
                                                "code": "BK-ABC123",
                                                "status": "confirmed",
                                                "payment_status": "paid"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Mettre à jour une réservation (PUT)",
                "operationId": "18853a3954a80561f01bcfbd6c67ec8b",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Supprimer une réservation",
                "operationId": "69e442ca715abf5036d9e4c2b22af630",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Mettre à jour une réservation",
                "operationId": "2fca498be1d97f0a811c75402c77a8a7",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}/confirm": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Confirmer une réservation",
                "operationId": "ee469d32573878bf6c4436d64e3c73e0",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Confirmée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}/start": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Démarrer la prestation",
                "operationId": "7ea97b11f592e8dc58ee4a4c3fc9ba76",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Démarrée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}/complete": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Terminer la prestation",
                "operationId": "50b05fcffa082732a9515a205966a23f",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Terminée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}/cancel": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Annuler une réservation",
                "operationId": "3be81765e89514862efa8931d1dbb336",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Annulée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}/payment-status": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Modifier le statut de paiement",
                "operationId": "77b63fe0abbae11b9e93cb7ea2dbe7b1",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_status"
                                ],
                                "properties": {
                                    "payment_status": {
                                        "type": "string",
                                        "enum": [
                                            "unpaid",
                                            "paid",
                                            "refunded",
                                            "partial"
                                        ],
                                        "example": "paid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}/recompute": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Recalculer les montants",
                "operationId": "495263127d11730e307b9d479a50a0f8",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Lister les catégories (avec sous-catégories)",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Filtre par nom de catégorie (LIKE)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Affichage parfait"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "nettoyage"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Nettoyage"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "broom",
                                                        "nullable": true
                                                    },
                                                    "color_class": {
                                                        "type": "string",
                                                        "example": "bg-indigo-500",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Services de nettoyage",
                                                        "nullable": true
                                                    },
                                                    "sub_categories_count": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "sub_categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 11
                                                                },
                                                                "category_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "slug": {
                                                                    "type": "string",
                                                                    "example": "nettoyage-bureaux"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Nettoyage de bureaux"
                                                                },
                                                                "icon": {
                                                                    "type": "string",
                                                                    "example": "building",
                                                                    "nullable": true
                                                                },
                                                                "service_offerings_count": {
                                                                    "type": "integer",
                                                                    "example": 12
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Créer une catégorie",
                "operationId": "71fcad552bb0eaba9fb191fd8d8dcab0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nettoyage"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "nettoyage",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "broom",
                                        "nullable": true
                                    },
                                    "color_class": {
                                        "type": "string",
                                        "example": "bg-indigo-500",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Services de nettoyage",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Créé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Catégorie créée avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "nettoyage"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Nettoyage"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "color_class": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "sub_categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Détails d’une catégorie (par slug)",
                "description": "Le modèle Category utilise getRouteKeyName() = 'slug'.",
                "operationId": "e92579e78391b6199e78c2a091dbea0a",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Slug de la catégorie",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "nettoyage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Détails complets de la catégorie récupérés"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "nettoyage"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Nettoyage"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "broom",
                                                        "nullable": true
                                                    },
                                                    "color_class": {
                                                        "type": "string",
                                                        "example": "bg-indigo-500",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "sub_categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 11
                                                                },
                                                                "category_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "slug": {
                                                                    "type": "string",
                                                                    "example": "nettoyage-bureaux"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Nettoyage de bureaux"
                                                                },
                                                                "icon": {
                                                                    "type": "string",
                                                                    "example": "building",
                                                                    "nullable": true
                                                                },
                                                                "service_offerings_count": {
                                                                    "type": "integer",
                                                                    "example": 12
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Mettre à jour une catégorie (PUT, par slug)",
                "operationId": "02aa39951e67916277e28086f85909c8",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Slug de la catégorie",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "nettoyage"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nettoyage & Entretien"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "nettoyage-entretien",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "broom",
                                        "nullable": true
                                    },
                                    "color_class": {
                                        "type": "string",
                                        "example": "bg-indigo-600",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Mise à jour de la description",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Categories"
                ],
                "summary": "Mettre à jour une catégorie (PATCH, par slug)",
                "operationId": "f6cb36bb8aedb9159d7b30573767faf1",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Slug de la catégorie",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "nettoyage"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nettoyage & Entretien"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "nettoyage-entretien",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "broom",
                                        "nullable": true
                                    },
                                    "color_class": {
                                        "type": "string",
                                        "example": "bg-indigo-600",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Mise à jour de la description",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Catégorie mise à jour avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "nettoyage-entretien"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Nettoyage & Entretien"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "color_class": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "sub_categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 11
                                                                },
                                                                "category_id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "slug": {
                                                                    "type": "string",
                                                                    "example": "nettoyage-bureaux"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "Nettoyage de bureaux"
                                                                },
                                                                "icon": {
                                                                    "type": "string",
                                                                    "nullable": true
                                                                },
                                                                "service_offerings_count": {
                                                                    "type": "integer",
                                                                    "example": 12
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories/{category}/subcategories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Lister les sous-catégories d’une catégorie",
                "operationId": "e8da975b0e319eb26416f4d6f24f96b3",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Slug de la catégorie",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "nettoyage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Vos sous catégories affichées"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 11
                                                    },
                                                    "category_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "slug": {
                                                        "type": "string",
                                                        "example": "nettoyage-bureaux"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Nettoyage de bureaux"
                                                    },
                                                    "icon": {
                                                        "type": "string",
                                                        "example": "building",
                                                        "nullable": true
                                                    },
                                                    "service_offerings_count": {
                                                        "type": "integer",
                                                        "example": 12
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/commissions": {
            "get": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Lister les commissions",
                "description": "Filtres: status, provider_id, booking_id, subscription_id, type, currency, période (from/to), q (external_reference/notes), amount_min/max. Tri & pagination.",
                "operationId": "9e6e08e7aa28b0fc5378a85edb4964b2",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "captured",
                                "settled",
                                "refunded",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "provider_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "subscription_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "percent|fixed",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "percent",
                                "fixed"
                            ]
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Date début (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Date fin (YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Recherche (external_reference, notes)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount_min",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "amount_max",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "created_at|amount|base_amount|captured_at|settled_at|status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "asc|desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Créer une commission",
                "operationId": "2928d66670e843b96fcb23eae3fc0e9d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "booking_id",
                                    "provider_id",
                                    "base_amount",
                                    "commission_type"
                                ],
                                "properties": {
                                    "booking_id": {
                                        "type": "integer",
                                        "example": 120
                                    },
                                    "provider_id": {
                                        "type": "integer",
                                        "example": 45
                                    },
                                    "subscription_id": {
                                        "type": "integer",
                                        "example": 12,
                                        "nullable": true
                                    },
                                    "base_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10000
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "XAF"
                                    },
                                    "commission_type": {
                                        "type": "string",
                                        "enum": [
                                            "percent",
                                            "fixed"
                                        ],
                                        "example": "percent"
                                    },
                                    "commission_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5,
                                        "nullable": true
                                    },
                                    "commission_fixed": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500,
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "captured",
                                            "settled",
                                            "refunded",
                                            "cancelled"
                                        ]
                                    },
                                    "external_reference": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "notes": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "metadata": {
                                        "type": "object",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Créé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commissions/{commission}": {
            "get": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Afficher une commission",
                "operationId": "5c4f951ea7217df8a2edc993700e8851",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Mettre à jour une commission (PUT)",
                "operationId": "1a6ed88649ad14a19af68e4670419bf6",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Supprimer une commission",
                "operationId": "5207bca53ce6a8891f81ded1ed22e169",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Mettre à jour une commission",
                "operationId": "7c9a38bbed906f37708873e221d193db",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commissions/{commission}/capture": {
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Marquer une commission comme capturée",
                "operationId": "a45f3a676de7cace7ae0daabb02e9085",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "external_reference": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Capturée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commissions/{commission}/settle": {
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Marquer une commission comme reversée (settled)",
                "operationId": "b4fb1c4e15a433fc5169feadca71615f",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commissions/{commission}/refund": {
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Marquer une commission comme remboursée",
                "operationId": "06da0de9e599a7f2562d8f1d66c7651f",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Remboursée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commissions/{commission}/cancel": {
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Annuler une commission",
                "operationId": "c84826b42a98c36b86ef266da915d793",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Annulée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commissions/{commission}/recompute-amount": {
            "post": {
                "tags": [
                    "Commissions"
                ],
                "summary": "Recalculer le montant depuis la base et la règle",
                "operationId": "65b6dc8cd44a19c545f32b27ac64c527",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "base_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Lister les paiements",
                "description": "Filtres, tri et pagination.",
                "operationId": "826dc6b24dd704607aa018a59207dd96",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "authorized",
                                "succeeded",
                                "failed",
                                "refunded",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "client_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "provider_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "card",
                                "mobile_money",
                                "bank_transfer",
                                "cash",
                                "wallet"
                            ]
                        }
                    },
                    {
                        "name": "gateway",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Recherche (reference, external_id, idempotency_key)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount_min",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "amount_max",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "created_at|amount|captured_at|status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "asc|desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OK"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 1,
                                                            "booking_id": 10,
                                                            "amount": 25000,
                                                            "currency": "XAF",
                                                            "status": "succeeded",
                                                            "reference": "PMT-ABC123"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Créer un paiement",
                "operationId": "5e2794ba3d3c64e70873367505e4a751",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "booking_id",
                                    "client_id",
                                    "amount"
                                ],
                                "properties": {
                                    "booking_id": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "client_id": {
                                        "type": "integer",
                                        "example": 25
                                    },
                                    "provider_id": {
                                        "type": "integer",
                                        "example": 5,
                                        "nullable": true
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25000
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "XAF"
                                    },
                                    "processor_fee": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "method": {
                                        "type": "string",
                                        "enum": [
                                            "card",
                                            "mobile_money",
                                            "bank_transfer",
                                            "cash",
                                            "wallet"
                                        ],
                                        "example": "mobile_money"
                                    },
                                    "gateway": {
                                        "type": "string",
                                        "example": "cinetpay"
                                    },
                                    "reference": {
                                        "type": "string",
                                        "example": "PMT-ABC123"
                                    },
                                    "idempotency_key": {
                                        "type": "string",
                                        "example": "idem-xyz-001"
                                    },
                                    "external_id": {
                                        "type": "string",
                                        "example": "trx_123"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "authorized",
                                            "succeeded",
                                            "failed",
                                            "refunded",
                                            "cancelled"
                                        ]
                                    },
                                    "payload": {
                                        "type": "object"
                                    },
                                    "metadata": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Créé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/{payment}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Afficher un paiement",
                "operationId": "c0d11adea38ecde3d94e4e281c72f01e",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Payments"
                ],
                "summary": "Mettre à jour un paiement (PUT)",
                "operationId": "e5dd3edb8dff7c8273fcd11fb7aadd94",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Supprimer un paiement",
                "operationId": "7d54149ed506d79572a9d9902884ab18",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Payments"
                ],
                "summary": "Mettre à jour un paiement",
                "operationId": "747b27e0e75a6441cb4d22102f7e36bf",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/{payment}/authorize": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Marquer comme autorisé",
                "operationId": "25c5f8d69736df39f9eb439bc69b3e36",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autorisé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/{payment}/capture": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Capturer (succès) un paiement",
                "operationId": "4f3ced5493968c6c332059e725101ca2",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "processor_fee": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "external_id": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Capturé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/{payment}/fail": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Marquer comme échoué",
                "operationId": "99cdc708a40ceac8ad404e0c7417025d",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "failure_code": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "failure_message": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Échoué"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/{payment}/refund": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Marquer comme remboursé",
                "operationId": "d9c47b8e5437a15324be088d9a6f9e68",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Remboursé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/{payment}/recompute-net": {
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Recalculer le net_amount (amount - processor_fee)",
                "operationId": "634b96424c24ec4dbc61f98b20879839",
                "parameters": [
                    {
                        "name": "payment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Lister les avis",
                "description": "Filtres: provider_id, user_id, service_offering_id, booking_id, approved=1/0, rating_min/max, q. Tri & pagination.",
                "operationId": "346169ce6ab0c633530a7cedc1a25fab",
                "parameters": [
                    {
                        "name": "provider_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "service_offering_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "booking_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "approved",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "rating_min",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "rating_max",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Créer un avis",
                "operationId": "154c71f5f72b459d998f5ea451bd4c96",
                "requestBody": {
                    "$ref": "#/components/requestBodies/ReviewStoreRequest"
                },
                "responses": {
                    "201": {
                        "description": "Créé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/{review}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Afficher un avis",
                "operationId": "ac5570090c431cfe5de872c8b7696d68",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Mettre à jour un avis (PUT)",
                "operationId": "ac24d04d9d6d1e7753ce24c811a3cbb0",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/ReviewUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Supprimer un avis",
                "operationId": "7d89060a6133216c7215b8624ce930fe",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Mettre à jour un avis",
                "operationId": "37c2c6fc6ce24df610040280c9101e00",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/ReviewUpdateRequest"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/{review}/approve": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Approuver / désapprouver un avis",
                "operationId": "d16dde76f671b0f78bbe316d698b719e",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/ReviewApproveRequest"
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reviews/{review}/unapprove": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Désapprouver un avis",
                "operationId": "e10e7762ffeb9e22e65466f5a0c5f2e3",
                "parameters": [
                    {
                        "name": "review",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings": {
            "get": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Lister les services",
                "description": "Recherche, filtres, tri et pagination.",
                "operationId": "2d5338a317504ad4b55487b57a7d32cc",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "active",
                                "paused",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "sub_category_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "provider_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "maxLength": 2
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Recherche par titre/description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "price_min",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "price_max",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "rating_min",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 5,
                            "minimum": 0
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "published_at|price_amount|avg_rating|bookings_count|views_count|title|created_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "asc|desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OK"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 10,
                                                            "title": "Nettoyage de bureaux",
                                                            "price_amount": 25000,
                                                            "currency": "XAF",
                                                            "status": "active",
                                                            "avg_rating": 4.6
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Créer un service",
                "operationId": "56f50bd0861690a9c0ef11f488f38aed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "sub_category_id",
                                    "title",
                                    "price_amount"
                                ],
                                "properties": {
                                    "sub_category_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "provider_id": {
                                        "type": "integer",
                                        "example": 42,
                                        "nullable": true
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Nettoyage de bureaux"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "price_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25000
                                    },
                                    "price_unit": {
                                        "type": "string",
                                        "enum": [
                                            "hour",
                                            "service",
                                            "km",
                                            "course",
                                            "kg",
                                            "jour"
                                        ],
                                        "nullable": true
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "XAF"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Douala",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "example": "CM",
                                        "nullable": true
                                    },
                                    "address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "coverage_km": {
                                        "type": "integer",
                                        "example": 10,
                                        "nullable": true
                                    },
                                    "on_site": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "at_provider": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "lat": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "lng": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "active",
                                            "paused",
                                            "archived"
                                        ],
                                        "nullable": true
                                    },
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Créé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service créé"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 11,
                                                "title": "Nettoyage de bureaux",
                                                "status": "draft"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}": {
            "get": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Détail d'un service",
                "operationId": "fdcc094506abee38749909ddcc500d25",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OK"
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 10,
                                                "title": "Nettoyage de bureaux",
                                                "status": "active",
                                                "price_amount": 25000,
                                                "currency": "XAF"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Mettre à jour un service (PUT)",
                "operationId": "0411a0c8e98076f49bbf14c305243ce2",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Supprimer un service",
                "operationId": "4b00afedd112982315daba576ed23629",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Mettre à jour un service",
                "operationId": "cc53d266409d72c137caeb3011d99c8b",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sub_category_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "provider_id": {
                                        "type": "integer",
                                        "example": 42
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Titre modifié"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "price_amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30000
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "active",
                                            "paused",
                                            "archived"
                                        ]
                                    },
                                    "featured": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}/publish": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Publier un service",
                "operationId": "671bd9013d264ca01fec37ddf99af5c4",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publié"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}/pause": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Mettre en pause un service",
                "operationId": "7d93397a2c3337e1284359dd0f482d04",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mis en pause"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}/archive": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Archiver un service",
                "operationId": "fed75dfab554ab5aa5b91c5281cef8d9",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reason": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Archivé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}/feature": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Basculer la mise en avant",
                "operationId": "320cadb3679203abf6165fa36c3c6c9f",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "featured": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}/verify": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Vérifier / dévérifier un service",
                "operationId": "ed8e038f3232a1110b6f78f647e72e3a",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "is_verified": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "reason": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}/attachments": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Mettre à jour les pièces jointes",
                "operationId": "b1e1fde3c3cc331905f768595a873747",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "attachments"
                                ],
                                "properties": {
                                    "attachments": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/service-offerings/{serviceOffering}/availability": {
            "get": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Disponibilités d'un service",
                "description": "Retourne les créneaux entre 'from' et 'to' (YYYY-MM-DD).",
                "operationId": "d0e16ed778f660e9609424b697d63d20",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "full",
                                "blocked",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 500,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OK"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 99,
                                                    "service_offering_id": 10,
                                                    "start_at": "2025-08-20 09:00:00",
                                                    "end_at": "2025-08-20 10:00:00",
                                                    "status": "available"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/service-offerings/{serviceOffering}/increment-views": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Incrémenter le compteur de vues",
                "operationId": "74d4f04bfa5221fc2d72e905fb9e3dde",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/service-offerings/{serviceOffering}/recompute-stats": {
            "post": {
                "tags": [
                    "ServiceOfferings"
                ],
                "summary": "Recalculer les statistiques (notes)",
                "operationId": "8f0a8b33356ed0c06253668414e011c4",
                "parameters": [
                    {
                        "name": "serviceOffering",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subcategories": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Lister les sous-catégories",
                "description": "Filtrer par category_id, category_slug et recherche textuelle.",
                "operationId": "329bf50ac12550f84d6a70f7523dbffa",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_slug",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Recherche par nom",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Affichage parfait"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Créer une sous-catégorie",
                "operationId": "596036cf3873c08f709d154b975e687b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 3,
                                        "nullable": true
                                    },
                                    "category_slug": {
                                        "type": "string",
                                        "example": "nettoyage",
                                        "nullable": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Nettoyage de bureaux"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "nettoyage-de-bureaux",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "broom",
                                        "nullable": true
                                    },
                                    "providers_count": {
                                        "type": "integer",
                                        "example": 12,
                                        "nullable": true
                                    },
                                    "average_price": {
                                        "type": "string",
                                        "example": "25 000 XAF",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Sous-catégorie de nettoyage...",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Créé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sous-catégorie créée avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/subcategories/{subCategory}": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Afficher une sous-catégorie",
                "description": "{subCategory} est le slug si getRouteKeyName() = 'slug'.",
                "operationId": "41243de5807459ed1c6a4f91e08c8ed1",
                "parameters": [
                    {
                        "name": "subCategory",
                        "in": "path",
                        "description": "Slug (ou ID selon binding)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Détails complets de la sous-catégorie récupérés"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Mettre à jour une sous-catégorie (PUT)",
                "operationId": "9b0869b99e52c3d76e0c1617b6486012",
                "parameters": [
                    {
                        "name": "subCategory",
                        "in": "path",
                        "description": "Slug (ou ID selon binding)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 3,
                                        "nullable": true
                                    },
                                    "category_slug": {
                                        "type": "string",
                                        "example": "nettoyage",
                                        "nullable": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Nettoyage vitres",
                                        "nullable": true
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "nettoyage-vitres",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "sparkles",
                                        "nullable": true
                                    },
                                    "providers_count": {
                                        "type": "integer",
                                        "example": 20,
                                        "nullable": true
                                    },
                                    "average_price": {
                                        "type": "string",
                                        "example": "35 000 XAF",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Mise à jour de la description...",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sous-catégorie mise à jour avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Mettre à jour une sous-catégorie",
                "operationId": "f8603acdf8a2879af5fb1b1c2dd6835a",
                "parameters": [
                    {
                        "name": "subCategory",
                        "in": "path",
                        "description": "Slug (ou ID selon binding)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 3,
                                        "nullable": true
                                    },
                                    "category_slug": {
                                        "type": "string",
                                        "example": "nettoyage",
                                        "nullable": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Nettoyage vitres",
                                        "nullable": true
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "nettoyage-vitres",
                                        "nullable": true
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "sparkles",
                                        "nullable": true
                                    },
                                    "providers_count": {
                                        "type": "integer",
                                        "example": 20,
                                        "nullable": true
                                    },
                                    "average_price": {
                                        "type": "string",
                                        "example": "35 000 XAF",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Mise à jour de la description...",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sous-catégorie mise à jour avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/subscriptions": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Lister les abonnements",
                "description": "Filtres: user_id, status, currency, active=1/0, plan_name/plan_code, q (plan/payment ref). Tri & pagination.",
                "operationId": "67df8b16e2d36e7aab97ce19a17f9355",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "expired",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "currency",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "maxLength": 3
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "1=encore actif (end_date future + status=active), 0=non",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "plan_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "plan_code",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Recherche plan/payment_reference",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "created_at|start_date|end_date|price|status|plan_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dir",
                        "in": "query",
                        "description": "asc|desc",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Créer un abonnement",
                "operationId": "a71648bdc4f0b03d53530ab22adf00cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "plan_name"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 42
                                    },
                                    "plan_name": {
                                        "type": "string",
                                        "example": "Gold"
                                    },
                                    "plan_code": {
                                        "type": "string",
                                        "example": "gold_2025",
                                        "nullable": true
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5000
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "XAF"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "expired",
                                            "cancelled"
                                        ],
                                        "example": "active"
                                    },
                                    "auto_renew": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "example": "mobile_money"
                                    },
                                    "payment_reference": {
                                        "type": "string",
                                        "example": "SUB-ABC123"
                                    },
                                    "commission_type": {
                                        "type": "string",
                                        "enum": [
                                            "percent",
                                            "fixed"
                                        ],
                                        "example": "percent"
                                    },
                                    "commission_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5,
                                        "nullable": true
                                    },
                                    "commission_fixed": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500,
                                        "nullable": true
                                    },
                                    "commission_notes": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Créé"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}": {
            "get": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Afficher un abonnement",
                "operationId": "c457abd264616cc7e99dd1180e251463",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Mettre à jour un abonnement (PUT)",
                "operationId": "6eae697142d75f7361cf803685812a73",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Supprimer un abonnement",
                "operationId": "196b452ee160d5acc43ec074c89c1663",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Mettre à jour un abonnement",
                "operationId": "0a1092cc10147e76cd858f9f6f37db3e",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}/cancel": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Annuler un abonnement",
                "operationId": "ff101bbf2e8216b0898eeed7b19155c3",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Annulé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}/expire": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Expirer un abonnement",
                "operationId": "bdb4f05d2af6ab194cf7d6c6880b9b10",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expiré"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}/activate": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Activer un abonnement",
                "operationId": "19290c029220cd769cbcabf19ac1be18",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}/toggle-auto-renew": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Basculer/forcer le renouvellement automatique",
                "operationId": "014a94917ec58014667b74f002febadd",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "auto_renew": {
                                        "type": "boolean",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/subscriptions/{subscription}/compute-commission": {
            "post": {
                "tags": [
                    "Subscriptions"
                ],
                "summary": "Calculer la commission pour un montant donné",
                "operationId": "af69c014a7c5826f4e0c4dbcefacad1e",
                "parameters": [
                    {
                        "name": "subscription",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Lister les utilisateurs",
                "description": "Filtres, tri, includes, pagination ou liste complète.",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "admin|client|prestataire|entreprise",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "account_type",
                        "in": "query",
                        "description": "entreprise|particulier",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "entreprise",
                                "particulier"
                            ]
                        }
                    },
                    {
                        "name": "user_type",
                        "in": "query",
                        "description": "client|prestataire",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "client",
                                "prestataire"
                            ]
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Code pays (CM, FR...)",
                        "schema": {
                            "type": "string",
                            "maxLength": 2
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Ville (company_city ou personal_address)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "has_active_subscription",
                        "in": "query",
                        "description": "1=avec abonnement actif, 0=sans",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                0,
                                1
                            ]
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Recherche (first_name,last_name,email)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Relations CSV (ex: role,currentSubscription,subscriptions,bookings,receivedBookings,serviceOfferings,reviews)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "CSV ex: first_name,-created_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Taille de page ex: 15 ou 'all'",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Liste des utilisateurs récupérée"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 120
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "example": {
                                                                    "id": 1,
                                                                    "first_name": "Alice",
                                                                    "last_name": "Dupont",
                                                                    "email": "alice@example.com"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "meta": {
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "per_page": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 120
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 8
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Liste des utilisateurs récupérée"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 1,
                                                            "first_name": "Alice",
                                                            "last_name": "Dupont",
                                                            "email": "alice@example.com"
                                                        }
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Créer un utilisateur",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "account_type",
                                    "role_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Alice"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Dupont"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "alice@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "secret123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+237670000000",
                                        "nullable": true
                                    },
                                    "preferred_language": {
                                        "type": "string",
                                        "example": "fr",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "CM",
                                        "nullable": true
                                    },
                                    "account_type": {
                                        "type": "string",
                                        "enum": [
                                            "entreprise",
                                            "particulier"
                                        ],
                                        "example": "particulier"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "Homme",
                                            "Femme",
                                            "Autre"
                                        ],
                                        "nullable": true
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-21",
                                        "nullable": true
                                    },
                                    "job": {
                                        "type": "string",
                                        "example": "Ingénieur",
                                        "nullable": true
                                    },
                                    "personal_address": {
                                        "type": "string",
                                        "example": "Bonamoussadi, Douala",
                                        "nullable": true
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "client",
                                            "prestataire"
                                        ],
                                        "nullable": true
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "sector": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "tax_number": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://exemple.com",
                                        "nullable": true
                                    },
                                    "company_logo": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_city": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_size": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "preferred_contact_method": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "accepts_terms": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "wants_newsletter": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Créé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur créé avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "first_name": "Alice",
                                                    "last_name": "Dupont",
                                                    "email": "alice@example.com"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Afficher un utilisateur",
                "description": "{user} peut être un ID ou un email (binding personnalisé).",
                "operationId": "d3a14968f8b7a072620c75c7c78ed6f8",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID ou email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Relations CSV",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Détails complets de l’utilisateur récupérés"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "first_name": "Alice",
                                                    "last_name": "Dupont",
                                                    "email": "alice@example.com"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Mettre à jour un utilisateur (PUT)",
                "operationId": "e29fc231c7937ab09483d35e6e3d1214",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "preferred_language": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "nullable": true
                                    },
                                    "account_type": {
                                        "type": "string",
                                        "enum": [
                                            "entreprise",
                                            "particulier"
                                        ],
                                        "nullable": true
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "Homme",
                                            "Femme",
                                            "Autre"
                                        ],
                                        "nullable": true
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    },
                                    "job": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "personal_address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "client",
                                            "prestataire"
                                        ],
                                        "nullable": true
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "sector": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "tax_number": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_logo": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_city": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_size": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "preferred_contact_method": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "accepts_terms": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "wants_newsletter": {
                                        "type": "boolean",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur mis à jour avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "first_name": "Alice",
                                                    "last_name": "Dupont",
                                                    "email": "alice@example.com"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Supprimer un utilisateur",
                "operationId": "e0f9a385a1d6788b99e519bd98cf7239",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Supprimé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur supprimé"
                                        },
                                        "data": {
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Mettre à jour un utilisateur",
                "operationId": "2eea0b6e40fa6e600a841277b6e2ff01",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "nullable": true
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "preferred_language": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "country": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "nullable": true
                                    },
                                    "account_type": {
                                        "type": "string",
                                        "enum": [
                                            "entreprise",
                                            "particulier"
                                        ],
                                        "nullable": true
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "Homme",
                                            "Femme",
                                            "Autre"
                                        ],
                                        "nullable": true
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "nullable": true
                                    },
                                    "job": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "personal_address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "user_type": {
                                        "type": "string",
                                        "enum": [
                                            "client",
                                            "prestataire"
                                        ],
                                        "nullable": true
                                    },
                                    "company_name": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "sector": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "tax_number": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "website": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_logo": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_address": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_city": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "company_size": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "preferred_contact_method": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "accepts_terms": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "wants_newsletter": {
                                        "type": "boolean",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur mis à jour avec succès"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "first_name": "Alice",
                                                    "last_name": "Dupont",
                                                    "email": "alice@example.com"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/bookings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Réservations d'un utilisateur",
                "operationId": "e44f695b9973ce53dc092bae989be88b",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "as",
                        "in": "query",
                        "description": "client|provider (défaut: client)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "client",
                                "provider"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "payment_status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Réservations récupérées"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 10,
                                                            "status": "confirmed",
                                                            "payment_status": "paid",
                                                            "start_at": "2025-08-10 10:00:00"
                                                        }
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 30
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/service-offerings": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Services offerts par un prestataire/entreprise",
                "operationId": "5e750cfd49b7b0abcf8e92568a5b96ea",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Services offerts récupérés"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 5,
                                                            "title": "Nettoyage industriel",
                                                            "status": "published",
                                                            "city": "Douala"
                                                        }
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/reviews": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Avis liés à un utilisateur",
                "description": "as=received (avis reçus) | as=given (avis donnés)",
                "operationId": "28d7c580974e39ed238c8c75fd3ed073",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "as",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "received",
                                "given"
                            ]
                        }
                    },
                    {
                        "name": "rating_min",
                        "in": "query",
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avis récupérés"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 3,
                                                            "rating": 4.5,
                                                            "comment": "Très pro",
                                                            "provider_id": 2,
                                                            "author_id": 5
                                                        }
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 7
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/availability": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Créneaux de disponibilité d'un prestataire",
                "operationId": "f7673c2a0dbfd08228a25323cfc13575",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Créneaux de disponibilité récupérés"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "example": {
                                                            "id": 9,
                                                            "provider_id": 2,
                                                            "start_at": "2025-08-20 09:00:00",
                                                            "end_at": "2025-08-20 12:00:00"
                                                        }
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/avatar": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Uploader/Mettre à jour l'avatar",
                "operationId": "c61dede646edfb2607544393ed209c4d",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "avatar"
                                ],
                                "properties": {
                                    "avatar": {
                                        "description": "Image (max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Avatar mis à jour"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "profile_photo": "avatars/abc.jpg"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/password": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Changer le mot de passe d'un utilisateur",
                "operationId": "ffe0f1b5ac2ed63e49ce0a595693851d",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "new_password"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "example": "ancienPass123"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "minLength": 6,
                                        "example": "nouveauPass123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "nouveauPass123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mot de passe changé avec succès"
                                        },
                                        "data": {
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Mot de passe actuel incorrect / validation"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/subscription/assign": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Assigner/Créer un abonnement actif pour un utilisateur",
                "operationId": "93116be3e662cf916efd2dba5f827a34",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "commission_type",
                                    "commission_rate"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Standard"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5000,
                                        "nullable": true
                                    },
                                    "frequency": {
                                        "type": "string",
                                        "enum": [
                                            "month",
                                            "year"
                                        ],
                                        "example": "month",
                                        "nullable": true
                                    },
                                    "commission_type": {
                                        "type": "string",
                                        "enum": [
                                            "percent",
                                            "flat"
                                        ],
                                        "example": "percent"
                                    },
                                    "commission_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "started_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-10T09:00:00Z",
                                        "nullable": true
                                    },
                                    "ends_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2026-08-10T09:00:00Z",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Abonnement assigné"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "name": "Standard",
                                                    "frequency": "month",
                                                    "commission_type": "percent",
                                                    "commission_rate": 10,
                                                    "status": "active"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}/subscription/revoke": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Révoquer l'abonnement courant d'un utilisateur",
                "operationId": "12de2acf6f141717dc91c2e4e1ebe281",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Abonnement révoqué"
                                        },
                                        "data": {
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/me": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Profil de l'utilisateur connecté",
                "operationId": "4917cc84ad78f7572292b07e6fbe4bce",
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "description": "Relations CSV",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profil courant"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "example": {
                                                    "id": 1,
                                                    "first_name": "Alice",
                                                    "last_name": "Dupont",
                                                    "email": "alice@example.com"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/roles": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Lister les rôles disponibles",
                "operationId": "d7d3b1a5de2cd6585bfdb9f45e5e93d2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rôles récupérés"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "admin"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 12
                    },
                    "first_name": {
                        "type": "string",
                        "example": "Paul"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "N."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+237600000000"
                    },
                    "preferred_language": {
                        "type": "string",
                        "example": "fr"
                    },
                    "country": {
                        "type": "string",
                        "example": "CM"
                    },
                    "account_type": {
                        "type": "string",
                        "enum": [
                            "entreprise",
                            "particulier"
                        ]
                    },
                    "user_type": {
                        "type": "string",
                        "enum": [
                            "client",
                            "prestataire"
                        ],
                        "nullable": true
                    },
                    "company_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "company_city": {
                        "type": "string",
                        "nullable": true
                    },
                    "profile_photo": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "type": "object",
                        "nullable": true
                    },
                    "currentSubscription": {
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 3
                    },
                    "slug": {
                        "type": "string",
                        "example": "nettoyage"
                    },
                    "name": {
                        "type": "string",
                        "example": "Nettoyage"
                    },
                    "icon": {
                        "type": "string",
                        "example": "broom"
                    },
                    "color_class": {
                        "type": "string",
                        "example": "bg-indigo-600"
                    },
                    "description": {
                        "type": "string",
                        "example": "Services de nettoyage divers"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubCategory"
                        }
                    }
                },
                "type": "object"
            },
            "SubCategory": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CategoryStoreRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Nettoyage"
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "color_class": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "CategoryUpdateRequest": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Nettoyage & Entretien"
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "color_class": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "Unauthorized": {
                "description": "Unauthenticated"
            }
        },
        "requestBodies": {
            "ReviewStoreRequest": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "user_id",
                                "provider_id",
                                "service_offering_id",
                                "booking_id",
                                "rating"
                            ],
                            "properties": {
                                "user_id": {
                                    "type": "integer",
                                    "example": 25
                                },
                                "provider_id": {
                                    "type": "integer",
                                    "example": 7
                                },
                                "service_offering_id": {
                                    "type": "integer",
                                    "example": 12
                                },
                                "booking_id": {
                                    "type": "integer",
                                    "example": 130
                                },
                                "rating": {
                                    "type": "integer",
                                    "maximum": 5,
                                    "minimum": 1,
                                    "example": 5
                                },
                                "comment": {
                                    "type": "string",
                                    "example": "Excellent service !",
                                    "nullable": true
                                },
                                "is_approved": {
                                    "type": "boolean",
                                    "example": false,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "ReviewUpdateRequest": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "user_id": {
                                    "type": "integer",
                                    "nullable": true
                                },
                                "provider_id": {
                                    "type": "integer",
                                    "nullable": true
                                },
                                "service_offering_id": {
                                    "type": "integer",
                                    "nullable": true
                                },
                                "booking_id": {
                                    "type": "integer",
                                    "nullable": true
                                },
                                "rating": {
                                    "type": "integer",
                                    "maximum": 5,
                                    "minimum": 1,
                                    "nullable": true
                                },
                                "comment": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "is_approved": {
                                    "type": "boolean",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "ReviewApproveRequest": {
                "required": false,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "approved": {
                                    "type": "boolean",
                                    "example": true,
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "AvailabilitySlots",
            "description": "AvailabilitySlots"
        },
        {
            "name": "Bookings",
            "description": "Bookings"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Commissions",
            "description": "Commissions"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        },
        {
            "name": "ServiceOfferings",
            "description": "ServiceOfferings"
        },
        {
            "name": "SubCategories",
            "description": "SubCategories"
        },
        {
            "name": "Subscriptions",
            "description": "Subscriptions"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}